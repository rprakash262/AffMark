[{"/home/ravi/Coding/AffMark/client/src/index.js":"1","/home/ravi/Coding/AffMark/client/src/App.js":"2","/home/ravi/Coding/AffMark/client/src/reportWebVitals.js":"3","/home/ravi/Coding/AffMark/client/src/routes/index.js":"4","/home/ravi/Coding/AffMark/client/src/routes/homePage/index.js":"5","/home/ravi/Coding/AffMark/client/src/routes/oneProduct/index.js":"6","/home/ravi/Coding/AffMark/client/src/routes/homePage/HomePage.js":"7","/home/ravi/Coding/AffMark/client/src/routes/oneProduct/OneProduct.js":"8","/home/ravi/Coding/AffMark/client/src/components/banner/index.js":"9","/home/ravi/Coding/AffMark/client/src/components/banner/Banner.js":"10","/home/ravi/Coding/AffMark/client/src/components/navbar/index.js":"11","/home/ravi/Coding/AffMark/client/src/components/navbar/Navbar.js":"12","/home/ravi/Coding/AffMark/client/src/components/carousel/index.js":"13","/home/ravi/Coding/AffMark/client/src/components/carousel/Carousel.js":"14","/home/ravi/Coding/AffMark/client/src/components/footer/index.js":"15","/home/ravi/Coding/AffMark/client/src/components/footer/Footer.js":"16","/home/ravi/Coding/AffMark/client/src/routes/oneCategory/index.js":"17","/home/ravi/Coding/AffMark/client/src/routes/oneCategory/OneCategory.js":"18","/home/ravi/Coding/AffMark/client/src/routes/oneSubcategory/index.js":"19","/home/ravi/Coding/AffMark/client/src/routes/oneSubcategory/OneSubcategory.js":"20","/home/ravi/Coding/AffMark/client/src/store.js":"21","/home/ravi/Coding/AffMark/client/src/reducers/index.js":"22","/home/ravi/Coding/AffMark/client/src/reducers/HomePageReducer.js":"23","/home/ravi/Coding/AffMark/client/src/routes/admin/index.js":"24","/home/ravi/Coding/AffMark/client/src/routes/admin/Admin.js":"25","/home/ravi/Coding/AffMark/client/src/actions/index.js":"26","/home/ravi/Coding/AffMark/client/src/reducers/AdminReducer.js":"27","/home/ravi/Coding/AffMark/client/src/routes/admin/AddNewCategoryForm.js":"28","/home/ravi/Coding/AffMark/client/src/routes/admin/AddNewSubCategoryForm.js":"29","/home/ravi/Coding/AffMark/client/src/routes/admin/AddNewItemForm.js":"30","/home/ravi/Coding/AffMark/client/src/components/alertBar/index.js":"31","/home/ravi/Coding/AffMark/client/src/reducers/LayoutReducer.js":"32","/home/ravi/Coding/AffMark/client/src/firebase-config.js":"33","/home/ravi/Coding/AffMark/client/src/actions/adminActions.js":"34","/home/ravi/Coding/AffMark/client/src/actions/mainActions.js":"35","/home/ravi/Coding/AffMark/client/src/reducers/OneCategoryReducer.js":"36","/home/ravi/Coding/AffMark/client/src/reducers/OneSubCategoryReducer.js":"37","/home/ravi/Coding/AffMark/client/src/components/oneItem/index.js":"38","/home/ravi/Coding/AffMark/client/src/components/oneItem/OneItem.js":"39","/home/ravi/Coding/AffMark/client/src/components/editItemModal/index.js":"40","/home/ravi/Coding/AffMark/client/src/components/editItemModal/EditItemModal.js":"41","/home/ravi/Coding/AffMark/client/src/components/selectDropdown/index.js":"42","/home/ravi/Coding/AffMark/client/src/components/selectDropdown/SelectDropdown.js":"43","/home/ravi/Coding/AffMark/client/src/reducers/OneProductReducer.js":"44","/home/ravi/Coding/AffMark/client/src/components/addNewItem/index.js":"45","/home/ravi/Coding/AffMark/client/src/components/addNewItem/AddNewItem.js":"46","/home/ravi/Coding/AffMark/client/src/components/rateSlider/index.js":"47","/home/ravi/Coding/AffMark/client/src/components/rateSlider/RateSlider.js":"48","/home/ravi/Coding/AffMark/client/src/reducers/AddNewItemReducer.js":"49","/home/ravi/Coding/AffMark/client/src/components/confirmDeleteItemPrompt/index.js":"50","/home/ravi/Coding/AffMark/client/src/components/confirmDeleteItemPrompt/ConfirmDeleteItemPrompt.js":"51","/home/ravi/Coding/AffMark/client/src/reducers/AddNewCategoryReducer.js":"52"},{"size":618,"mtime":1633769276848,"results":"53","hashOfConfig":"54"},{"size":159,"mtime":1633769258999,"results":"55","hashOfConfig":"54"},{"size":362,"mtime":1629579204000,"results":"56","hashOfConfig":"54"},{"size":3357,"mtime":1633776615355,"results":"57","hashOfConfig":"54"},{"size":59,"mtime":1629579204000,"results":"58","hashOfConfig":"54"},{"size":66,"mtime":1629579206000,"results":"59","hashOfConfig":"54"},{"size":2284,"mtime":1633770972555,"results":"60","hashOfConfig":"54"},{"size":1251,"mtime":1629579204000,"results":"61","hashOfConfig":"54"},{"size":54,"mtime":1629579206000,"results":"62","hashOfConfig":"54"},{"size":500,"mtime":1633770091380,"results":"63","hashOfConfig":"54"},{"size":54,"mtime":1629579208000,"results":"64","hashOfConfig":"54"},{"size":1333,"mtime":1633769194154,"results":"65","hashOfConfig":"54"},{"size":61,"mtime":1629579208000,"results":"66","hashOfConfig":"54"},{"size":2062,"mtime":1629579208000,"results":"67","hashOfConfig":"54"},{"size":54,"mtime":1609598966875,"results":"68","hashOfConfig":"69"},{"size":135,"mtime":1609599263061,"results":"70","hashOfConfig":"69"},{"size":69,"mtime":1629579204000,"results":"71","hashOfConfig":"54"},{"size":2252,"mtime":1629579204000,"results":"72","hashOfConfig":"54"},{"size":78,"mtime":1629579204000,"results":"73","hashOfConfig":"54"},{"size":1576,"mtime":1629579204000,"results":"74","hashOfConfig":"54"},{"size":297,"mtime":1629579204000,"results":"75","hashOfConfig":"54"},{"size":793,"mtime":1655555261423,"results":"76","hashOfConfig":"54"},{"size":1946,"mtime":1629579204000,"results":"77","hashOfConfig":"54"},{"size":52,"mtime":1629579204000,"results":"78","hashOfConfig":"54"},{"size":6030,"mtime":1655555453348,"results":"79","hashOfConfig":"54"},{"size":705,"mtime":1629579204000,"results":"80","hashOfConfig":"54"},{"size":16275,"mtime":1655554433217,"results":"81","hashOfConfig":"54"},{"size":2594,"mtime":1656134227877,"results":"82","hashOfConfig":"54"},{"size":4239,"mtime":1655534175161,"results":"83","hashOfConfig":"54"},{"size":1651,"mtime":1655534169937,"results":"84","hashOfConfig":"54"},{"size":788,"mtime":1629579206000,"results":"85","hashOfConfig":"54"},{"size":2144,"mtime":1633775175841,"results":"86","hashOfConfig":"54"},{"size":507,"mtime":1629579208000,"results":"87","hashOfConfig":"54"},{"size":1822,"mtime":1629579204000,"results":"88","hashOfConfig":"54"},{"size":1154,"mtime":1629579204000,"results":"89","hashOfConfig":"54"},{"size":1544,"mtime":1629579204000,"results":"90","hashOfConfig":"54"},{"size":1554,"mtime":1629579204000,"results":"91","hashOfConfig":"54"},{"size":57,"mtime":1629579206000,"results":"92","hashOfConfig":"54"},{"size":1243,"mtime":1655531042626,"results":"93","hashOfConfig":"54"},{"size":75,"mtime":1629579206000,"results":"94","hashOfConfig":"54"},{"size":7730,"mtime":1633771003762,"results":"95","hashOfConfig":"54"},{"size":78,"mtime":1629579206000,"results":"96","hashOfConfig":"54"},{"size":1382,"mtime":1629579206000,"results":"97","hashOfConfig":"54"},{"size":1494,"mtime":1629579204000,"results":"98","hashOfConfig":"54"},{"size":66,"mtime":1629579206000,"results":"99","hashOfConfig":"54"},{"size":7889,"mtime":1655551287253,"results":"100","hashOfConfig":"54"},{"size":67,"mtime":1629579206000,"results":"101","hashOfConfig":"54"},{"size":1515,"mtime":1629579206000,"results":"102","hashOfConfig":"54"},{"size":11483,"mtime":1629579204000,"results":"103","hashOfConfig":"54"},{"size":105,"mtime":1633775519946,"results":"104","hashOfConfig":"54"},{"size":1118,"mtime":1633852969340,"results":"105","hashOfConfig":"54"},{"size":2908,"mtime":1656134181237,"results":"106","hashOfConfig":"54"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},"g696rr",{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"v58jqy",{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"109"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"109"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"109"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"109"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"109"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"109"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"109"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"109"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ravi/Coding/AffMark/client/src/index.js",[],["221","222"],"/home/ravi/Coding/AffMark/client/src/App.js",[],"/home/ravi/Coding/AffMark/client/src/reportWebVitals.js",[],"/home/ravi/Coding/AffMark/client/src/routes/index.js",[],"/home/ravi/Coding/AffMark/client/src/routes/homePage/index.js",[],"/home/ravi/Coding/AffMark/client/src/routes/oneProduct/index.js",[],"/home/ravi/Coding/AffMark/client/src/routes/homePage/HomePage.js",[],"/home/ravi/Coding/AffMark/client/src/routes/oneProduct/OneProduct.js",[],"/home/ravi/Coding/AffMark/client/src/components/banner/index.js",[],"/home/ravi/Coding/AffMark/client/src/components/banner/Banner.js",[],"/home/ravi/Coding/AffMark/client/src/components/navbar/index.js",[],"/home/ravi/Coding/AffMark/client/src/components/navbar/Navbar.js",[],"/home/ravi/Coding/AffMark/client/src/components/carousel/index.js",[],"/home/ravi/Coding/AffMark/client/src/components/carousel/Carousel.js",[],"/home/ravi/Coding/AffMark/client/src/components/footer/index.js",[],["223","224"],"/home/ravi/Coding/AffMark/client/src/components/footer/Footer.js",[],"/home/ravi/Coding/AffMark/client/src/routes/oneCategory/index.js",[],"/home/ravi/Coding/AffMark/client/src/routes/oneCategory/OneCategory.js",[],"/home/ravi/Coding/AffMark/client/src/routes/oneSubcategory/index.js",[],"/home/ravi/Coding/AffMark/client/src/routes/oneSubcategory/OneSubcategory.js",[],"/home/ravi/Coding/AffMark/client/src/store.js",[],"/home/ravi/Coding/AffMark/client/src/reducers/index.js",[],"/home/ravi/Coding/AffMark/client/src/reducers/HomePageReducer.js",[],"/home/ravi/Coding/AffMark/client/src/routes/admin/index.js",[],"/home/ravi/Coding/AffMark/client/src/routes/admin/Admin.js",["225","226","227","228","229","230","231","232","233","234","235","236"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nimport AddNewCategory from './AddNewCategoryForm';\nimport AddNewSubCategory from './AddNewSubCategoryForm';\nimport AddNewItemForm from './AddNewItemForm';\nimport { ACTIONS } from '../../reducers/AdminReducer';\nimport './Admin.css';\n\nclass Admin extends Component {\n  async componentDidMount() {\n    this.props.init();\n  }\n\n  render() {\n    const {\n      selectedTab,\n      newCategory,\n      allCategories,\n      changeNewCategory,\n      setSelectedTab,\n      newSubCategory,\n      changeNewSubCategory,\n      submitNewCategory,\n      selectedCategoryId,\n      selectedSubCategoryId,\n      selectCategory,\n      submitNewSubCategory,\n      allSubCategories,\n      subcategoriesForCategory,\n      selectSubCategory,\n      changeNewItemFormData,\n      newItemFormData,\n      changeItemImage,\n      uploadItemImage,\n      submitNewItem,\n      imageUrl,\n      uploadingImage,\n      changeSecurityKey,\n      submitSecurityKey,\n      loggedIn,\n      filteredCategories,\n      filteredSubCategories,\n      submitttingFlag,\n      discardImage,\n    } = this.props;\n\n    return (\n      <div>\n        {!loggedIn && (\n          <div className=\"admin\">\n            <div className=\"admin-add-new-category\">\n              <div className=\"admin-one-form-item\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter security key\"\n                  onChange={e => changeSecurityKey(e.target.value)}\n                />\n              </div>\n              <div className=\"admin-one-form-item\">\n                <button onClick={submitSecurityKey}>Enter</button>\n              </div>\n            </div>\n          </div>\n        )}\n        {loggedIn && (\n          <div className=\"admin\">\n            <div className=\"admin-sidenav\">\n              <div\n                className=\"admin-one-nav-item\"\n                onClick={() => setSelectedTab('addNewCategory')}\n              >\n                Add New Category\n                {selectedTab === 'addNewCategory' && (\n                  <ArrowDropDownIcon className=\"admin-nav-arrow-down\" />\n                )}\n              </div>\n              <div\n                className=\"admin-one-nav-item\"\n                onClick={() => setSelectedTab('addNewSubCategory')}\n              >\n                Add New Sub-Category\n                {selectedTab === 'addNewSubCategory' && (\n                  <ArrowDropDownIcon className=\"admin-nav-arrow-down\" />\n                )}\n              </div>\n              <div\n                className=\"admin-one-nav-item\"\n                onClick={() => setSelectedTab('addNewItem')}\n              >\n                Add New Item\n                {selectedTab === 'addNewItem' && (\n                  <ArrowDropDownIcon className=\"admin-nav-arrow-down\" />\n                )}\n              </div>\n            </div>\n            <div className=\"admin-main-area\">\n              {selectedTab === 'addNewCategory' && (\n                <AddNewCategory\n                  // submitttingFlag={submitttingFlag}\n                  // newCategory={newCategory}\n                  // changeNewCategory={changeNewCategory}\n                  // submitNewCategory={submitNewCategory}\n                  // filteredCategories={filteredCategories}\n                />\n              )}\n              {selectedTab === 'addNewSubCategory' && (\n                <AddNewSubCategory\n                  submitttingFlag={submitttingFlag}\n                  allCategories={allCategories}\n                  changeNewSubCategory={changeNewSubCategory}\n                  newSubCategory={newSubCategory}\n                  selectedCategoryId={selectedCategoryId}\n                  selectCategory={selectCategory}\n                  submitNewSubCategory={submitNewSubCategory}\n                  filteredSubCategories={filteredSubCategories}\n                />\n              )}\n              {selectedTab === 'addNewItem' && (\n                <AddNewItemForm\n                  selectCategory={selectCategory}\n                  selectedCategoryId={selectedCategoryId}\n                  allCategories={allCategories}\n                  allSubCategories={allSubCategories}\n                  subcategoriesForCategory={subcategoriesForCategory}\n                  selectSubCategory={selectSubCategory}\n                  selectedSubCategoryId={selectedSubCategoryId}\n                />\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapState = state => {\n  const {\n    selectedTab,\n    newCategory,\n    newSubCategory,\n    allCategories,\n    allSubCategories,\n    selectedCategoryId,\n    selectedSubCategoryId,\n    newItemFormData,\n    subcategoriesForCategory,\n    imageUrl,\n    uploadingImage,\n    loggedIn,\n    filteredCategories,\n    filteredSubCategories,\n    submitttingFlag,\n  } = state.admin;\n\n  return {\n    selectedTab,\n    newCategory,\n    newSubCategory,\n    allCategories,\n    selectedCategoryId,\n    selectedSubCategoryId,\n    allSubCategories,\n    newItemFormData,\n    subcategoriesForCategory,\n    imageUrl,\n    uploadingImage,\n    loggedIn,\n    filteredCategories,\n    filteredSubCategories,\n    submitttingFlag,\n  };\n}\n\nconst mapDispatch = {\n  init: ACTIONS.init,\n  changeNewCategory: ACTIONS.changeNewCategory,\n  setSelectedTab: ACTIONS.setSelectedTab,\n  submitNewCategory: ACTIONS.submitNewCategory,\n  changeNewSubCategory: ACTIONS.changeNewSubCategory,\n  selectCategory: ACTIONS.selectCategory,\n  selectSubCategory: ACTIONS.selectSubCategory,\n  submitNewSubCategory: ACTIONS.submitNewSubCategory,\n  changeNewItemFormData: ACTIONS.changeNewItemFormData,\n  changeItemImage: ACTIONS.changeItemImage,\n  uploadItemImage: ACTIONS.uploadItemImage,\n  submitNewItem: ACTIONS.submitNewItem,\n  changeSecurityKey: ACTIONS.changeSecurityKey,\n  submitSecurityKey: ACTIONS.submitSecurityKey,\n  discardImage: ACTIONS.discardImage,\n}\n\nexport default connect(mapState, mapDispatch)(Admin);","/home/ravi/Coding/AffMark/client/src/actions/index.js",[],"/home/ravi/Coding/AffMark/client/src/reducers/AdminReducer.js",["237","238","239"],"import { cloneDeep } from 'lodash';\n\nimport { adminActions } from '../actions';\nimport { ACTIONS as layoutActions } from './LayoutReducer';\nimport { storage } from '../firebase-config';\n\nconst {\n  getCategories,\n  addNewCategory,\n  addNewSubCategory,\n  getSubCategories,\n  // getSubCategoriesByCategoryId,\n  fileUpload,\n  addNewItem,\n  postEditItem,\n  postDeleteItem,\n} = adminActions;\n\nconst SET_SECURITY_KEY = 'admin/SET_SECURITY_KEY';\nconst SET_LOGGED_IN = 'admin/SET_LOGGED_IN';\nconst SET_CATEGORY = 'admin/SET_CATEGORY';\nconst SET_SUB_CATEGORY = 'admin/SET_SUB_CATEGORY';\nconst SET_SELECTED_TAB = 'admin/SET_SELECTED_TAB';\nconst SET_ALL_CATEGORIES = 'admin/SET_ALL_CATEGORIES';\nconst SET_ALL_SUB_CATEGORIES = 'admin/SET_ALL_SUB_CATEGORIES';\nconst SET_SUB_CATEGORIES_FOR_CATEGORY = 'admin/SET_SUB_CATEGORIES_FOR_CATEGORY';\nconst SELECT_CATEGORY = 'admin/SELECT_CATEGORY';\nconst SELECT_SUB_CATEGORY = 'admin/SELECT_SUB_CATEGORY';\nconst SET_NEW_ITEM_FORM_DATA = 'admin/SET_NEW_ITEM_FORM_DATA';\nconst SET_IMAGE_FORM_DATA = 'admin/SET_IMAGE_DATA';\nconst SET_IMAGE_URL = 'admin/SET_IMAGE_URL';\nconst SET_UPLOADING_IMAGE = 'admin/SET_UPLOADING_IMAGE';\nconst SET_FILTERED_CATEGORIES = 'admin/SET_FILTERED_CATEGORIES';\nconst SET_FILTERED_SUB_CATEGORIES = 'admin/SET_FILTERED_SUB_CATEGORIES';\nconst SET_LOADING_EDIT_ITEM_MODAL = 'admin/SET_LOADING_EDIT_ITEM_MODAL';\nconst SET_EDITING_ITEM = 'admin/SET_EDITING_ITEM';\nconst SET_SUBMITTING_FLAG = 'admin/SET_SUBMITTING_FLAG';\nconst SET_DELETING_ITEM = 'admin/SET_DELETING_ITEM';\n\nconst changeSecurityKey = key => ({ type: SET_SECURITY_KEY, key });\nconst setLoggedIn = bool => ({ type: SET_LOGGED_IN, bool });\nconst setNewCategory = category => ({ type: SET_CATEGORY, category });\nconst setSelectedTab = selectedTab => ({ type: SET_SELECTED_TAB, selectedTab });\nconst setAllCategories = arr => ({ type: SET_ALL_CATEGORIES, arr });\nconst setAllSubCategories = arr => ({ type: SET_ALL_SUB_CATEGORIES, arr });\nconst setNewSubCategory = subCategory => ({ type: SET_SUB_CATEGORY, subCategory })\nconst selectCategoryInternal = catId => ({ type: SELECT_CATEGORY, catId });\nconst selectSubCategory = subCatId => ({ type: SELECT_SUB_CATEGORY, subCatId });\nconst setNewItemFormData = formData => ({ type: SET_NEW_ITEM_FORM_DATA, formData });\nconst setSubcategoriesForCategory = arr => ({ type: SET_SUB_CATEGORIES_FOR_CATEGORY, arr });\nconst setImageFormData = imageFormData => ({ type: SET_IMAGE_FORM_DATA, imageFormData });\nconst setImageUrl = imageUrl => ({ type: SET_IMAGE_URL, imageUrl });\nconst setUploadingImage = bool => ({ type: SET_UPLOADING_IMAGE, bool });\nconst setFilteredCategories = cat => ({ type: SET_FILTERED_CATEGORIES, cat });\nconst setFilteredSubCategories = cat => ({ type: SET_FILTERED_SUB_CATEGORIES, cat });\nconst loadEditItemModal = bool => ({ type: SET_LOADING_EDIT_ITEM_MODAL, bool });\nconst setEditingItem = item => ({ type: SET_EDITING_ITEM, item });\nconst setSubmitting = bool => ({ type: SET_SUBMITTING_FLAG, bool });\nconst setDeletingItem = item => ({ type: SET_DELETING_ITEM, item });\n\nconst defaultState = {\n  loadingEditItemModal: false,\n  loggedIn: false,\n  securityKey: '',\n  newCategory: '',\n  newSubCategory: '',\n  selectedCategoryId: '',\n  selectedTab: 'addNewCategory',\n  allCategories: [],\n  allSubCategories: [],\n  subcategoriesForCategory: [],\n  selectedSubCategoryId: '',\n  newItemFormData: {\n    isFeatured: false,\n  },\n  imageFormData: {},\n  imageUrl: '',\n  uploadingImage: false,\n  filteredCategories: [],\n  filteredSubCategories: [],\n  editingItem: {},\n  submitttingFlag: false,\n  deletingItem: {},\n};\n\nconst init = () => async dispatch => {\n  const loggedIn = await localStorage.getItem('loggedIn');\n\n  if (loggedIn) {\n    dispatch(setLoggedIn(true));\n  }\n\n  try {\n    const categories = await getCategories();\n    const subCategories = await getSubCategories();\n\n    dispatch(setAllCategories(categories));\n    dispatch(setAllSubCategories(subCategories));\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nconst changeNewCategory = txt => (dispatch, getState) => {\n  const { allCategories } = getState().admin;\n\n  dispatch(setNewCategory(txt));\n\n  const x = allCategories.filter(d => d.categoryName.toLowerCase().indexOf(txt.toLowerCase()) > -1);\n  dispatch(setFilteredCategories(x));\n}\n\nconst changeNewSubCategory = txt => (dispatch, getState) => {\n  const { allSubCategories } = getState().admin;\n\n  dispatch(setNewSubCategory(txt));\n\n  const x = allSubCategories.filter(d => d.subCategoryName.toLowerCase().indexOf(txt.toLowerCase()) > -1);\n  dispatch(setFilteredSubCategories(x));\n}\n\nconst submitSecurityKey = () => async (dispatch, getState) => {\n  const { securityKey } = getState().admin;\n\n  if (securityKey === 'secret') {\n    await localStorage.setItem('loggedIn', true);\n    dispatch(setLoggedIn(true));\n  }\n}\n\nconst selectCategory = catId => async (dispatch, getState) => {\n  dispatch(selectCategoryInternal(catId))\n\n  try {\n    const { allSubCategories } = getState().admin;\n\n    const subcategoriesForCategory = allSubCategories.filter(subCat => subCat.categoryId === catId);\n\n    dispatch(setSubcategoriesForCategory(subcategoriesForCategory));\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nconst submitNewCategory = () => async (dispatch, getState) => {\n  dispatch(setSubmitting(true));\n  const { newCategory } = getState().admin;\n\n  if (!newCategory) {\n    dispatch(layoutActions.setAlert(true, 'danger', 'Enter category name!'));\n\n    return setTimeout(() => {\n      return dispatch(layoutActions.setAlert(false, 'danger', 'Enter category name!'));\n    }, 4000);\n  }\n\n  try {\n    const response = await addNewCategory(newCategory);\n\n    if (!response.success) {\n      dispatch(layoutActions.setAlert(true, 'danger', response.result));\n\n      return setTimeout(() => {\n        return dispatch(layoutActions.setAlert(false, 'danger', response.result));\n      }, 4000);\n    }\n\n    const { result } = response;\n    const { categoryName: catName } = result;\n\n    dispatch(changeNewCategory(''));\n    dispatch(setSubmitting(false));\n    dispatch(layoutActions.setAlert(true, 'success', `Category \"${catName}\" added successfully!`));\n\n    return setTimeout(() => {\n      return dispatch(layoutActions.setAlert(false, 'success', `Category \"${catName}\" added successfully!`));\n    }, 4000);\n  } catch (err) {\n    console.error(err);\n    dispatch(setSubmitting(false));\n  }\n}\n\nconst submitNewSubCategory = () => async (dispatch, getState) => {\n  dispatch(setSubmitting(true));\n  const { newSubCategory, selectedCategoryId } = getState().admin;\n\n  if (!selectedCategoryId) {\n    dispatch(layoutActions.setAlert(true, 'danger', 'Please select a category!'));\n\n    return setTimeout(() => {\n      return dispatch(layoutActions.setAlert(false, 'danger', 'Please select a category!'));\n    }, 4000);\n  }\n\n  if (!newSubCategory) {\n    dispatch(layoutActions.setAlert(true, 'danger', 'Please enter sub-category name!'));\n    return setTimeout(() => {\n      return dispatch(layoutActions.setAlert(false, 'danger', 'Please enter sub-category name!'));\n    }, 4000);\n  }\n\n  try {\n    const response = await addNewSubCategory(selectedCategoryId, newSubCategory);\n\n    if (!response.success) {\n      dispatch(layoutActions.setAlert(true, 'danger', response.result));\n\n      return setTimeout(() => {\n        return dispatch(layoutActions.setAlert(false, 'danger', response.result));\n      }, 4000);\n    }\n\n    const { result } = response;\n    const { subCategoryName: subCatName } = result;\n\n    dispatch(changeNewSubCategory(''));\n    dispatch(selectCategoryInternal(''));\n    dispatch(setSubmitting(false));\n    dispatch(layoutActions.setAlert(true, 'success', `Sub-Category \"${subCatName}\" added successfully!`));\n\n    setTimeout(() => {\n      dispatch(layoutActions.setAlert(false, 'success', `Sub-Category \"${subCatName}\" added successfully!`));\n    }, 4000);\n  } catch (err) {\n    console.error(err);\n    dispatch(setSubmitting(false));\n  }\n}\n\nconst changeNewItemFormData = (type, value) => (dispatch, getState) => {\n  const { newItemFormData } = getState().admin;\n\n  const clonedFormData = cloneDeep(newItemFormData);\n\n  clonedFormData[type] = value;\n\n  dispatch(setNewItemFormData(clonedFormData));\n}\n\nconst changeItemImage = (e) => async (dispatch, getState) => {\n  // const imageFormObj = new FormData();\n\n  const img = e.target.files[0];\n\n  // imageFormObj.append('imageName', `multer-image-${Date.now()}`);\n  // imageFormObj.append('imageData', e.target.files[0]);\n\n  // dispatch(setImageFormData(imageFormObj));\n  dispatch(setImageFormData(img));\n}\n\nconst uploadItemImage = () => async (dispatch, getState) => {\n  dispatch(setUploadingImage(true));\n  const { imageFormData } = getState().admin;\n\n  // try {\n  //   const response = await fileUpload(imageFormData);\n\n  //   const { result } = response;\n  //   const { imageData } = result;\n\n  //   dispatch(setImageUrl(imageData))\n  //   dispatch(setUploadingImage(false));\n  // } catch (err) {\n  //   console.error(err);\n  //   dispatch(setUploadingImage(false));\n  // }\n  const uploadTask = storage.ref(`images/${imageFormData.name}`).put(imageFormData);\n\n  uploadTask.on(\"state_changed\", snapshot => {}, error => console.log(error), () => {\n    storage\n      .ref(\"images\")\n      .child(imageFormData.name)\n      .getDownloadURL()\n      .then(url => {\n        dispatch(setImageUrl(url))\n        dispatch(setUploadingImage(false));\n      })\n  })\n}\n\nconst submitNewItem = () => async (dispatch, getState) => {\n  dispatch(setSubmitting(true));\n  const {\n    newItemFormData,\n    imageUrl,\n    selectedCategoryId,\n    selectedSubCategoryId,\n  } = getState().admin;\n\n  newItemFormData['categoryId'] = selectedCategoryId;\n  newItemFormData['subCategoryId'] = selectedSubCategoryId;\n  newItemFormData['itemImage'] = imageUrl;\n\n  const {\n    categoryId,\n    subCategoryId,\n    itemImage,\n    itemName,\n    itemPrice,\n    buyLink,\n  } = newItemFormData;\n\n  if (!categoryId ||\n      !subCategoryId ||\n      !itemImage ||\n      !itemName ||\n      !itemPrice ||\n      !buyLink) {\n    dispatch(layoutActions.setAlert(true, 'danger', 'All fields are required!'));\n    dispatch(setSubmitting(false));\n\n    return setTimeout(() => {\n      return dispatch(layoutActions.setAlert(false, 'danger', 'All fields are required!'));\n    }, 4000);\n  }\n\n  try {\n    const response = await addNewItem(newItemFormData);\n\n    if (!response.success) {\n      dispatch(layoutActions.setAlert(true, 'danger', 'Something went wrong!'));\n\n      return setTimeout(() => {\n        return dispatch(layoutActions.setAlert(false, 'danger', 'Something went wrong!'));\n      }, 4000);\n    }\n\n    dispatch(selectCategoryInternal(''));\n    dispatch(selectSubCategory(''));\n    dispatch(setImageFormData({}));\n    dispatch(setImageUrl(''))\n    dispatch(setNewItemFormData({}))\n    dispatch(setSubmitting(false));\n    dispatch(layoutActions.setAlert(true, 'success', 'Item added successfully!'));\n\n    setTimeout(() => {\n      dispatch(layoutActions.setAlert(false, 'success', 'Item added successfully!'));\n    }, 4000);\n  } catch (err) {\n    console.error(err);\n    dispatch(setSubmitting(false));\n  }\n}\n\nconst editItem = item => async (dispatch, getState) => {\n  dispatch(loadEditItemModal(true));\n  dispatch(setEditingItem(item));\n  dispatch(layoutActions.showEditItemModal());\n\n  try {\n    const categories = await getCategories();\n    const subCategories = await getSubCategories();\n\n    dispatch(setAllCategories(categories));\n    dispatch(setAllSubCategories(subCategories));\n  } catch (err) {\n    console.error(err);\n  }\n\n  let newItemFormData = {};\n\n  const {\n    categoryId,\n    subCategoryId,\n    itemName,\n    itemPrice,\n    itemDescription,\n    offer,\n    isFeatured,\n    buyLink,\n    itemImage,\n  } = item;\n\n  newItemFormData['itemName'] = itemName;\n  newItemFormData['itemPrice'] = itemPrice;\n  newItemFormData['itemDescription'] = itemDescription;\n  newItemFormData['offer'] = offer;\n  newItemFormData['isFeatured'] = isFeatured;\n  newItemFormData['buyLink'] = buyLink;\n\n  dispatch(selectCategory(categoryId));\n  dispatch(selectSubCategory(subCategoryId));\n  dispatch(setNewItemFormData(newItemFormData));\n  dispatch(setImageUrl(itemImage))\n\n  console.log({item})\n  dispatch(loadEditItemModal(false));\n}\n\nconst submitEditNewItem = () => async (dispatch, getState) => {\n  const {\n    editingItem,\n    newItemFormData,\n    selectedCategoryId,\n    selectedSubCategoryId,\n    imageUrl,\n  } = getState().admin;\n\n  const { id, itemImage } = editingItem;\n\n  newItemFormData['categoryId'] = selectedCategoryId;\n  newItemFormData['subCategoryId'] = selectedSubCategoryId;\n  newItemFormData['itemImage'] = imageUrl || itemImage;\n\n  try {\n    const response = await postEditItem(id, newItemFormData);\n\n    window.location.reload();\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nconst deleteItem = item => async (dispatch) => {\n  dispatch(setDeletingItem(item));\n  dispatch(layoutActions.showConfirmDeleteItemPrompt());\n}\n\nconst submitDeleteItem = (item) => async (dispatch, getState) => {\n  const { deletingItem } = getState().admin;\n  const { id } = deletingItem;\n\n  try {\n    const response = await postDeleteItem(id);\n\n    window.location.reload();\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nconst discardImage = () => dispatch => {\n  dispatch(setImageFormData({}));\n  dispatch(setImageUrl(''));\n}\n\nexport const ACTIONS = {\n  init,\n  changeNewCategory,\n  setSelectedTab,\n  submitNewCategory,\n  submitNewSubCategory,\n  changeNewSubCategory,\n  selectCategory,\n  selectSubCategory,\n  changeNewItemFormData,\n  changeItemImage,\n  uploadItemImage,\n  submitNewItem,\n  changeSecurityKey,\n  submitSecurityKey,\n  editItem,\n  submitEditNewItem,\n  deleteItem,\n  submitDeleteItem,\n  discardImage,\n};\n\nfunction AdminReducer(state = defaultState, action) {\n  switch (action.type) {\n    case SET_CATEGORY:\n      return Object.assign({}, state, {\n        newCategory: action.category,\n      });\n    case SET_SUB_CATEGORY:\n      return Object.assign({}, state, {\n        newSubCategory: action.subCategory,\n      });\n    case SET_SELECTED_TAB:\n      return Object.assign({}, state, {\n        selectedTab: action.selectedTab,\n      });\n    case SET_ALL_CATEGORIES:\n      return Object.assign({}, state, {\n        allCategories: action.arr,\n        filteredCategories: action.arr,\n      });\n    case SET_ALL_SUB_CATEGORIES:\n      return Object.assign({}, state, {\n        allSubCategories: action.arr,\n      });\n    case SET_SUB_CATEGORIES_FOR_CATEGORY:\n      return Object.assign({}, state, {\n        subcategoriesForCategory: action.arr,\n      });\n    case SELECT_CATEGORY:\n      return Object.assign({}, state, {\n        selectedCategoryId: action.catId,\n      });\n    case SELECT_SUB_CATEGORY:\n      return Object.assign({}, state, {\n        selectedSubCategoryId: action.subCatId,\n      });\n    case SET_NEW_ITEM_FORM_DATA:\n      return Object.assign({}, state, {\n        newItemFormData: action.formData,\n      });\n    case SET_IMAGE_FORM_DATA:\n      return Object.assign({}, state, {\n        imageFormData: action.imageFormData,\n      });\n    case SET_IMAGE_URL:\n      return Object.assign({}, state, {\n        imageUrl: action.imageUrl,\n      });\n    case SET_UPLOADING_IMAGE:\n      return Object.assign({}, state, {\n        uploadingImage: action.bool,\n      });\n    case SET_SECURITY_KEY:\n      return Object.assign({}, state, {\n        securityKey: action.key,\n      });\n    case SET_LOGGED_IN:\n      return Object.assign({}, state, {\n        loggedIn: action.bool,\n      });\n    case SET_FILTERED_CATEGORIES:\n      return Object.assign({}, state, {\n        filteredCategories: action.cat,\n      });\n    case SET_FILTERED_SUB_CATEGORIES:\n      return Object.assign({}, state, {\n        filteredSubCategories: action.cat,\n      });\n    case SET_LOADING_EDIT_ITEM_MODAL:\n      return Object.assign({}, state, {\n        loadingEditItemModal: action.bool,\n      });\n    case SET_EDITING_ITEM:\n      return Object.assign({}, state, {\n        editingItem: action.item,\n      });\n    case SET_SUBMITTING_FLAG:\n      return Object.assign({}, state, {\n        submitttingFlag: action.bool,\n      });\n    case SET_DELETING_ITEM:\n      return Object.assign({}, state, {\n        deletingItem: action.item,\n      });\n    default:\n      return state;\n  }\n}\n\nexport default AdminReducer;","/home/ravi/Coding/AffMark/client/src/routes/admin/AddNewCategoryForm.js",[],"/home/ravi/Coding/AffMark/client/src/routes/admin/AddNewSubCategoryForm.js",["240"],"import React, { Component } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\n// import SelectDropdown from '../../components/selectDropdown';\n\nconst useStyles = (theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 390,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\nclass AddNewCategory extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showDropdown: false,\n    }\n  }\n\n  onFocus = () => {\n    this.setState({\n      showDropdown: true,\n    });\n  }\n\n  onBlur = () => {\n    this.setState({\n      showDropdown: false,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { showDropdown } = this.state;\n    \n    const {\n      allCategories,\n      changeNewSubCategory,\n      newSubCategory,\n      selectedCategoryId,\n      selectCategory,\n      submitNewSubCategory,\n      filteredSubCategories,\n      submitttingFlag,\n    } = this.props;\n\n    console.log({showDropdown});\n\n    return (\n      <div className=\"admin-add-new-sub-category\">\n        <div className=\"admin-one-form-item\">\n          <FormControl className={classes.formControl}>\n            {/* <SelectDropdown\n              selectedItem={allCategories.find(d => d.id === selectedCategoryId) ?\n                allCategories.find(d => d.id === selectedCategoryId).categoryName :\n                'Select Category'\n              }\n              selectItem={id => selectCategory(id)}\n              dropdownList={allCategories.map(d => ({\n                id: d.id,\n                value:d.categoryName,\n              }))}\n            /> */}\n            <InputLabel id=\"demo-mutiple-name-label\">Select Category</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={selectedCategoryId}\n              onChange={e => selectCategory(e.target.value)}\n              MenuProps={MenuProps}\n            >\n              <MenuItem>Select Category</MenuItem>\n              {allCategories.map(d => (\n                <MenuItem\n                  selected={d.id === selectedCategoryId}\n                  value={d.id}\n                  key={d.id}\n                >\n                  {d.categoryName}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div style={{ position: 'relative', width: '100%' }}>\n          <div className=\"admin-one-form-item\">\n            {/* <input\n              type=\"text\"\n              onFocus={this.onFocus}\n              onBlur={this.onBlur}\n              placeholder=\"Enter sub-category name\"\n              onChange={e => changeNewSubCategory(e.target.value)}\n              value={newSubCategory}\n            /> */}\n            <TextField\n              onFocus={this.onFocus}\n              onBlur={this.onBlur}\n              value={newSubCategory}\n              className=\"one-form-field\"\n              label=\"Enter sub-category name\"\n              variant=\"outlined\"\n              onChange={e => changeNewSubCategory(e.target.value)}\n            />\n          </div>\n          {showDropdown && (\n            <div className=\"filtered-category-dropdown\">\n              {filteredSubCategories.map(d => (\n                <div>{d.subCategoryName}</div>\n              ))}\n            </div>\n          )}\n        </div>\n        <div className=\"admin-one-form-item\">\n          <Button\n            variant=\"contained\"\n            onClick={submitttingFlag ? () => {} : submitNewSubCategory}\n            // className=\"admin-button\"\n          >\n            {submitttingFlag ? 'Wait...' : 'Submit'}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(AddNewCategory);\n","/home/ravi/Coding/AffMark/client/src/routes/admin/AddNewItemForm.js",["241","242","243","244","245","246","247","248","249","250","251"],"import React, { Component } from 'react';\nimport BackupIcon from '@material-ui/icons/Backup';\nimport DoneIcon from '@material-ui/icons/Done';\n// import HourglassFullIcon from '@material-ui/icons/HourglassFull';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport TimerOutlinedIcon from '@material-ui/icons/TimerOutlined';\nimport SelectDropdown from '../../components/selectDropdown';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { connect } from 'react-redux';\n\nimport { ACTIONS } from '../../reducers/AddNewItemReducer';\nimport AddNewItem from '../../components/addNewItem'; \n\nclass AddNewItemForm extends Component {\n  render() { \n    const {\n      // selectCategory,\n      // allCategories = [],\n      // selectedCategoryId,\n      // selectSubCategory,\n      // allSubCategories = [],\n      // subcategoriesForCategory = [],\n      // selectedSubCategoryId,\n      // changeNewItemFormData,\n      // newItemFormData,\n      changeItemImage,\n      uploadItemImage,\n      // submitNewItem,\n      imageUrls,\n      // uploadingImage,\n      // submitttingFlag,\n      // discardImage,\n    } = this.props;\n\n    return (\n      <AddNewItem\n        // changeItemImage={changeItemImage}\n        // uploadItemImage={uploadItemImage}\n        // imageUrls={imageUrls}\n      />\n    )\n  }\n}\n\nconst mapState = state => {\n  const { imageUrls } = state.addNewItem;\n\n  return {\n    imageUrls,\n  }\n}\n\nconst mapDispatch = {\n  changeItemImage: ACTIONS.changeItemImage,\n  uploadItemImage: ACTIONS.uploadItemImage,\n}\n\nexport default connect(mapState, mapDispatch)(AddNewItem);\n","/home/ravi/Coding/AffMark/client/src/components/alertBar/index.js",[],"/home/ravi/Coding/AffMark/client/src/reducers/LayoutReducer.js",[],"/home/ravi/Coding/AffMark/client/src/firebase-config.js",[],"/home/ravi/Coding/AffMark/client/src/actions/adminActions.js",[],"/home/ravi/Coding/AffMark/client/src/actions/mainActions.js",[],"/home/ravi/Coding/AffMark/client/src/reducers/OneCategoryReducer.js",[],"/home/ravi/Coding/AffMark/client/src/reducers/OneSubCategoryReducer.js",[],"/home/ravi/Coding/AffMark/client/src/components/oneItem/index.js",[],"/home/ravi/Coding/AffMark/client/src/components/oneItem/OneItem.js",[],"/home/ravi/Coding/AffMark/client/src/components/editItemModal/index.js",[],"/home/ravi/Coding/AffMark/client/src/components/editItemModal/EditItemModal.js",["252","253","254"],"import DoneIcon from '@material-ui/icons/Done';\nimport TimerOutlinedIcon from '@material-ui/icons/TimerOutlined';\nimport BackupIcon from '@material-ui/icons/Backup';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport { connect } from 'react-redux';\n\nimport { ACTIONS } from '../../reducers/AdminReducer';\nimport SelectDropdown from '../../components/selectDropdown';\nimport './EditItemModal.css';\n\nfunction EditItemModal({\n  selectCategory,\n  allCategories,\n  selectedCategoryId,\n  selectSubCategory,\n  subcategoriesForCategory,\n  selectedSubCategoryId,\n  changeNewItemFormData,\n  newItemFormData,\n  changeItemImage,\n  uploadingImage,\n  imageUrl,\n  uploadItemImage,\n  submitEditNewItem,\n  hideEditItemModal,\n  loadingEditItemModal,\n  discardImage,\n}) {\n  return (\n    <div>\n      {loadingEditItemModal && (\n        <div className=\"edit-item-modal\">Loading...Please wait</div>\n      )}\n      {!loadingEditItemModal && (\n        <div className=\"edit-item-modal\">\n          <div\n            className=\"close-edit-item-modal\"\n            onClick={hideEditItemModal}\n          >\n            <HighlightOffIcon style={{ fontSize: '50px', color: '#ed143d' }} />\n          </div>\n          <div className=\"edit-item-modal-content\">\n            <div className=\"admin-add-new-item\">\n              <div className=\"admin-one-form-item\">\n                <SelectDropdown\n                  selectedItem={allCategories.find(d => d.id === selectedCategoryId) ?\n                    allCategories.find(d => d.id === selectedCategoryId).categoryName :\n                    'Select Category'\n                  }\n                  selectItem={id => selectCategory(id)}\n                  dropdownList={allCategories.map(d => ({\n                    id: d.id,\n                    value:d.categoryName,\n                  }))}\n                />\n              </div>\n              <div className=\"admin-one-form-item\">\n                <SelectDropdown\n                  selectedItem={subcategoriesForCategory.find(d => d.id === selectedSubCategoryId) ?\n                    subcategoriesForCategory.find(d => d.id === selectedSubCategoryId).subCategoryName :\n                     'Select Sub-Category'\n                  }\n                  selectItem={id => selectSubCategory(id)}\n                  dropdownList={subcategoriesForCategory.map(d => ({\n                    id: d.id,\n                    value:d.subCategoryName,\n                  }))}\n                />\n              </div>\n              <div className=\"admin-one-form-item\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter item name\"\n                  onChange={e => changeNewItemFormData('itemName', e.target.value)}\n                  value={newItemFormData.itemName}\n                />\n              </div>\n              <div className=\"admin-one-form-item\">\n                <textarea\n                  type=\"text\"\n                  placeholder=\"Enter item description\"\n                  onChange={e => changeNewItemFormData('itemDescription', e.target.value)}\n                  value={newItemFormData.itemDescription}\n                />\n              </div>\n              {imageUrl && (\n                <div className=\"admin-one-form-item file\">\n                  <div className=\"upload-img-preview\">\n                    <img src={imageUrl} />\n                    <HighlightOffIcon\n                      onClick={discardImage}\n                      className=\"close-preview-btn\" style={{ color: '#ed143d', marginLeft: '10px', cursor: 'pointer' }}\n                    />\n                  </div>\n                </div>\n              )}\n              {!imageUrl && !uploadingImage && (\n                <div className=\"admin-one-form-item file\">\n                  <input\n                    type=\"file\"\n                    onChange={e => changeItemImage(e)}\n                  />\n                  <button onClick={() => uploadItemImage()}>\n                    <BackupIcon />\n                  </button>\n                </div>\n              )}\n              {!imageUrl && uploadingImage && (\n                <div className=\"admin-one-form-item file\">\n                  <input\n                    type=\"file\"\n                    onChange={e => changeItemImage(e)}\n                  />\n                  <TimerOutlinedIcon style={{ color: \"#ed143d\", marginLeft: '10px' }} />\n                </div>\n              )}\n              {/* <div className=\"admin-one-form-item file\">\n                <input\n                  type=\"file\"\n                  onChange={e => changeItemImage(e)}\n                />\n                {uploadingImage && <TimerOutlinedIcon style={{ color: \"#ed143d\", marginLeft: '10px' }} />}\n                {imageUrl && !uploadingImage && (\n                  <DeleteForeverIcon style={{ color: '#ed143d', marginLeft: '10px', cursor: 'pointer' }} />\n                )}\n                {!imageUrl && !uploadingImage && (\n                  <button onClick={() => uploadItemImage()}>\n                    <BackupIcon />\n                  </button>\n                )}\n              </div> */}\n              <div className=\"admin-one-form-item\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter item price\"\n                  onChange={e => changeNewItemFormData('itemPrice', e.target.value)}\n                  value={newItemFormData.itemPrice}\n                />\n              </div>\n              <div className=\"admin-one-form-item\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter item offer\"\n                  onChange={e => changeNewItemFormData('offer', e.target.value)}\n                  value={newItemFormData.offer}\n                />\n              </div>\n              <div className=\"admin-one-form-item\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter item buying link\"\n                  onChange={e => changeNewItemFormData('buyLink', e.target.value)}\n                  value={newItemFormData.buyLink}\n                />\n              </div>\n              <div className=\"admin-one-form-item\">\n                <label htmlFor=\"check-box\" className=\"checkbox\">\n                  <input\n                    id=\"check-box\"\n                    type=\"checkbox\"\n                    checked={newItemFormData.isFeatured}\n                    value={newItemFormData.isFeatured}\n                    onChange={e => changeNewItemFormData('isFeatured', !newItemFormData.isFeatured)}\n                  /> Check if featured item\n                </label>\n              </div>\n              <div className=\"admin-one-form-item\">\n                <button onClick={submitEditNewItem}>Submit</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst mapState = state => {\n  const {\n    allCategories,\n    selectedCategoryId,\n    subcategoriesForCategory,\n    selectedSubCategoryId,\n    newItemFormData,\n    uploadingImage,\n    imageUrl,\n    loadingEditItemModal\n  } = state.admin;\n\n  return {\n    allCategories,\n    selectedCategoryId,\n    subcategoriesForCategory,\n    selectedSubCategoryId,\n    newItemFormData,\n    uploadingImage,\n    imageUrl,\n    loadingEditItemModal,\n  }\n}\n\nconst mapDispatch = {\n  selectCategory: ACTIONS.selectCategory,\n  selectSubCategory: ACTIONS.selectSubCategory,\n  changeNewItemFormData: ACTIONS.changeNewItemFormData,\n  changeItemImage: ACTIONS.changeItemImage,\n  uploadItemImage: ACTIONS.uploadItemImage,\n  submitEditNewItem: ACTIONS.submitEditNewItem,\n  discardImage: ACTIONS.discardImage,\n}\n\nexport default connect(mapState, mapDispatch)(EditItemModal);\n","/home/ravi/Coding/AffMark/client/src/components/selectDropdown/index.js",[],"/home/ravi/Coding/AffMark/client/src/components/selectDropdown/SelectDropdown.js",["255"],"import React, { Component } from 'react';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n\nimport './SelectDropdown.css';\n\nclass SelectDropdown extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showDropdown: false,\n    }\n  }\n\n  showDropdownList = () => {\n    this.setState(state => ({\n      showDropdown: state.showDropdown ? false : true,\n    }))\n  }\n\n  hideDropdownList = () => {\n    this.setState({\n      showDropdown: false,\n    })\n  }\n\n  selectItemHandler = id => {\n    this.setState({\n      showDropdown: false,\n    }, () => {\n      this.props.selectItem(id);\n    })\n  }\n\n  render() {\n    const { dropdownList, selectedItem, selectItem } = this.props\n    const { showDropdown } = this.state;\n\n    return (\n        <div className=\"select-dropdown\">\n          <div\n            className=\"select-dropdown-selected-item\"\n            onClick={this.showDropdownList}\n            onBlur={this.hideDropdownList}\n          >\n            <span>{selectedItem}</span>\n            <KeyboardArrowDownIcon />\n          </div>\n          {showDropdown && (\n            <div className=\"select-dropdown-list\">\n              {dropdownList.map(d => (\n                  <div onClick={() => this.selectItemHandler(d.id)}>{d.value}</div>\n              ))}\n            </div>\n          )}\n        </div>\n    );\n  }\n}\n\nexport default SelectDropdown;\n","/home/ravi/Coding/AffMark/client/src/reducers/OneProductReducer.js",[],"/home/ravi/Coding/AffMark/client/src/components/addNewItem/index.js",[],"/home/ravi/Coding/AffMark/client/src/components/addNewItem/AddNewItem.js",["256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport BackupIcon from '@material-ui/icons/Backup';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport TimerOutlinedIcon from '@material-ui/icons/TimerOutlined';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport RateSlider from '../../components/rateSlider';\n\nimport { ACTIONS } from '../../reducers/AddNewItemReducer';\nimport './AddNewItem.css';\n\nconst useStyles = (theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 390,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n});\n\nconst styles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass AddNewItem extends Component {\n  render() {\n    const {\n      classes,\n      imageUrls=[],\n      changeItemImage,\n      uploadItemImage,\n      discardImage,\n      uploadingImage,\n      imageFormData,\n      itemName,\n      itemPrice,\n      discount,\n      bestOffer,\n      customerRating,\n      numberOfRating,\n      warrenty,\n      returnPolicy,\n      replacement,\n      itemDescription,\n      avaliableColors,\n      COD,\n      setItemName,\n      setItemPrice,\n      setItemDiscount,\n      setItemBestOffer,\n      setItemRating,\n      setNumberOfRating,\n      setItemWarrenty,\n      setReturnPolicy,\n      setReplacementPolicy,\n      setCOD,\n      setItemDesc,\n      setAvailableColors,\n      allCategories,\n      selectedCategoryId,\n      selectCategory,\n      subcategoriesForCategory,\n      selectSubCategory,\n      selectedSubCategoryId,\n    } = this.props;\n\n    console.log({ props: this.props });\n\n    return (\n      <div className=\"admin-add-new-item\">\n        <div className={classes.root} noValidate autoComplete=\"off\">\n          <div className=\"admin-one-form-item\">\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"demo-mutiple-name-label\">Select Category</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={selectedCategoryId}\n                onChange={e => selectCategory(e.target.value)}\n                MenuProps={MenuProps}\n              >\n                <MenuItem>Select Category</MenuItem>\n                  {allCategories.map(d => (\n                    <MenuItem\n                      selected={d.id === selectedCategoryId}\n                      value={d.id}\n                      key={d.id}\n                    >\n                      {d.categoryName}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          </div>\n          <div className=\"admin-one-form-item\">\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"demo-mutiple-name-label\">Select Sub Category</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={selectedSubCategoryId}\n                onChange={e => selectSubCategory(e.target.value)}\n                MenuProps={MenuProps}\n                disabled={!selectedCategoryId}\n              >\n                <MenuItem>Select Sub Category</MenuItem>\n                  {subcategoriesForCategory.map(d => (\n                    <MenuItem\n                      selected={d.id === selectedSubCategoryId}\n                      value={d.id}\n                      key={d.id}\n                    >\n                      {d.subCategoryName}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          </div>\n          <div className=\"admin-one-form-item\">\n            <TextField\n              value={itemName}\n              className=\"one-form-field\"\n              label=\"Item Name\"\n              variant=\"outlined\"\n              onChange={e => setItemName(e.target.value)}\n            />\n          </div>\n          <div className=\"admin-one-form-item\">\n            <TextField\n              value={itemDescription}\n              className=\"one-form-field\"\n              multiline\n              rowsMax={10}\n              label=\"Description\"\n              variant=\"outlined\"\n              onChange={e => setItemDesc(e.target.value)}\n            />\n          </div>\n          <div className=\"admin-one-form-item\">\n            <h6>Upload Image:</h6>\n            {imageUrls.length > 0 && (\n              <div className=\"upload-img-preview\">\n                {imageUrls.map((url, index) => (\n                  <div className=\"one-img-preview\">\n                    <img src={url} alt=\"img_preview\" />\n                    <HighlightOffIcon\n                      onClick={() => discardImage(index)}\n                      className=\"close-preview-btn\"\n                      style={{\n                        color: '#ed143d',\n                        marginLeft: '10px',\n                        cursor: 'pointer'\n                      }}\n                    />\n                  </div>\n                ))}\n              </div>\n            )}\n            {imageUrls.length < 3  && (\n              <div className=\"admin-one-form-item file\">\n                <input\n                  className=\"input-file\"\n                  type=\"file\"\n                  onChange={e => changeItemImage(e)}\n                />\n                {imageFormData && !uploadingImage && (\n                  <button className=\"upload-btn\" onClick={() => uploadItemImage()}>\n                    <BackupIcon style={{ color: '#fff' }} />\n                  </button>\n                )}\n                {uploadingImage && (\n                  <button className=\"uploading-btn\">\n                    <TimerOutlinedIcon style={{ color: '#fff' }} />\n                  </button>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => {\n  const {\n    imageUrls,\n    uploadingImage,\n    imageFormData,\n    itemName,\n    itemPrice,\n    discount,\n    bestOffer,\n    customerRating,\n    numberOfRating,\n    warrenty,\n    returnPolicy,\n    replacement,\n    itemDescription,\n    avaliableColors,\n    COD,\n  } = state.addNewItem;\n\n  return {\n    imageUrls,\n    uploadingImage,\n    imageFormData,\n    itemName,\n    itemPrice,\n    discount,\n    bestOffer,\n    customerRating,\n    numberOfRating,\n    warrenty,\n    returnPolicy,\n    replacement,\n    itemDescription,\n    avaliableColors,\n    COD,\n  }\n}\n\nconst mapDispatch = {\n  changeItemImage: ACTIONS.changeItemImage,\n  uploadItemImage: ACTIONS.uploadItemImage,\n  discardImage: ACTIONS.discardImage,\n  setItemName: ACTIONS.setItemName,\n  setItemPrice: ACTIONS.setItemPrice,\n  setItemDiscount: ACTIONS.setItemDiscount,\n  setItemBestOffer: ACTIONS.setItemBestOffer,\n  setItemRating: ACTIONS.setItemRating,\n  setNumberOfRating: ACTIONS.setNumberOfRating,\n  setItemWarrenty: ACTIONS.setItemWarrenty,\n  setReturnPolicy: ACTIONS.setReturnPolicy,\n  setReplacementPolicy: ACTIONS.setReplacementPolicy,\n  setCOD: ACTIONS.setCOD,\n  setItemDesc: ACTIONS.setItemDesc,\n  setAvailableColors: ACTIONS.setAvailableColors,\n}\n\nexport default withStyles(useStyles, styles, { withTheme: true })(connect(mapState, mapDispatch)(AddNewItem));\n","/home/ravi/Coding/AffMark/client/src/components/rateSlider/index.js",[],"/home/ravi/Coding/AffMark/client/src/components/rateSlider/RateSlider.js",[],"/home/ravi/Coding/AffMark/client/src/reducers/AddNewItemReducer.js",["279"],"import { cloneDeep } from 'lodash';\n\nimport { adminActions } from '../actions';\nimport { ACTIONS as layoutActions } from './LayoutReducer';\nimport { storage } from '../firebase-config';\n\nconst {\n  getCategories,\n  getSubCategories,\n  addNewItem,\n  postEditItem,\n} = adminActions;\n\nconst SET_ALL_CATEGORIES = 'admin/SET_ALL_CATEGORIES';\nconst SET_ALL_SUB_CATEGORIES = 'admin/SET_ALL_SUB_CATEGORIES';\nconst SET_SUB_CATEGORIES_FOR_CATEGORY = 'admin/SET_SUB_CATEGORIES_FOR_CATEGORY';\nconst SELECT_CATEGORY = 'admin/SELECT_CATEGORY';\nconst SELECT_SUB_CATEGORY = 'admin/SELECT_SUB_CATEGORY';\nconst SET_NEW_ITEM_FORM_DATA = 'admin/SET_NEW_ITEM_FORM_DATA';\nconst SET_IMAGE_FORM_DATA = 'admin/SET_IMAGE_DATA';\nconst SET_IMAGE_URLS = 'admin/SET_IMAGE_URLS';\nconst SET_UPLOADING_IMAGE = 'admin/SET_UPLOADING_IMAGE';\nconst SET_LOADING_EDIT_ITEM_MODAL = 'admin/SET_LOADING_EDIT_ITEM_MODAL';\nconst SET_EDITING_ITEM = 'admin/SET_EDITING_ITEM';\nconst SET_SUBMITTING_FLAG = 'admin/SET_SUBMITTING_FLAG';\nconst SET_ITEM_NAME = 'admin/SET_ITEM_NAME';\nconst SET_ITEM_PRICE = 'admin/SET_ITEM_PRICE';\nconst SET_ITEM_DISCOUNT = 'admin/SET_ITEM_DISCOUNT';\nconst SET_ITEM_BEST_OFFER = 'admin/SET_ITEM_BEST_OFFER';\nconst SET_ITEM_RATING = 'admin/SET_ITEM_RATING';\nconst SET_NUMBER_OF_RATING = 'admin/SET_NUMBER_OF_RATING';\nconst SET_ITEM_WARRENTY = 'admin/SET_ITEM_WARRENTY';\nconst SET_RETURN_POLICY = 'admin/SET_RETURN_POLICY';\nconst SET_REPLACEMENT_POLICY = 'admin/SET_REPLACEMENT_POLICY';\nconst SET_COD = 'admin/SET_COD';\nconst SET_ITEM_DESC = 'admin/SET_ITEM_DESC';\nconst SET_AVAILABLE_COLORS = 'admin/SET_AVAILABLE_COLORS';\n\nconst setAllCategories = arr => ({ type: SET_ALL_CATEGORIES, arr });\nconst setAllSubCategories = arr => ({ type: SET_ALL_SUB_CATEGORIES, arr });\nconst selectCategoryInternal = catId => ({ type: SELECT_CATEGORY, catId });\nconst selectSubCategory = subCatId => ({ type: SELECT_SUB_CATEGORY, subCatId });\nconst setImageFormData = imageFormData => ({ type: SET_IMAGE_FORM_DATA, imageFormData });\nconst setImageUrls = imageUrls => ({ type: SET_IMAGE_URLS, imageUrls });\nconst setUploadingImage = bool => ({ type: SET_UPLOADING_IMAGE, bool });\nconst loadEditItemModal = bool => ({ type: SET_LOADING_EDIT_ITEM_MODAL, bool });\nconst setEditingItem = item => ({ type: SET_EDITING_ITEM, item });\nconst setSubmitting = bool => ({ type: SET_SUBMITTING_FLAG, bool });\nconst setItemName = name => ({ type: SET_ITEM_NAME, name });\nconst setItemPrice = price => ({ type: SET_ITEM_PRICE, price });\nconst setItemDiscount = discount => ({ type: SET_ITEM_DISCOUNT, discount });\nconst setItemBestOffer = bestOffer => ({ type: SET_ITEM_BEST_OFFER, bestOffer });\nconst setItemRating = rating => ({ type: SET_ITEM_RATING, rating });\nconst setNumberOfRating = number => ({ type: SET_NUMBER_OF_RATING, number });\nconst setItemWarrenty = warrenty => ({ type: SET_ITEM_WARRENTY, warrenty });\nconst setReturnPolicy = policy => ({ type: SET_RETURN_POLICY, policy });\nconst setReplacementPolicy = policy => ({ type: SET_REPLACEMENT_POLICY, policy });\nconst setCOD = bool => ({ type: SET_COD, bool });\nconst setItemDesc = desc => ({ type: SET_ITEM_DESC, desc });\nconst setAvailableColors = colors => ({ type: SET_AVAILABLE_COLORS, colors });\nconst selectCategory = () => {};\n\nconst defaultState = {\n  allCategories: [],\n  allSubCategories: [],\n  subcategoriesForCategory: [],\n  imageFormData: null,\n  uploadingImage: false,\n  editingItem: {},\n  submitttingFlag: false,\n  selectedSubCategoryId: '',\n  selectedCategoryId: '',\n  itemName: '',\n  itemPrice: '',\n  itemDescription: '',\n  discount: '',\n  imageUrls: [],\n  bestOffer: '',\n  customerRating: '',\n  numberOfRating: '',\n  warrenty: '',\n  returnPolicy: '',\n  replacement: '',\n  avaliableColors: '',\n  COD: false, \n};\n\nconst changeItemImage = e => async (dispatch, getState) => {\n  const img = e.target.files[0];\n\n  dispatch(setImageFormData(img));\n}\n\nconst uploadItemImage = () => async (dispatch, getState) => {\n  dispatch(setUploadingImage(true));\n  const { imageFormData, imageUrls } = getState().admin;\n  const clonedUrls = cloneDeep(imageUrls);\n\n  const uploadTask = storage.ref(`images/${imageFormData.name}`).put(imageFormData);\n\n  uploadTask.on(\"state_changed\", snapshot => {}, error => console.log(error), () => {\n    storage\n      .ref(\"images\")\n      .child(imageFormData.name)\n      .getDownloadURL()\n      .then(url => {\n        clonedUrls.push(url);\n        console.log({clonedUrls})\n        dispatch(setImageUrls(clonedUrls))\n        dispatch(setImageFormData(null));\n        dispatch(setUploadingImage(false));\n      })\n  })\n}\n\nconst submitNewItem = () => async (dispatch, getState) => {\n  dispatch(setSubmitting(true));\n  const {\n    newItemFormData,\n    imageUrls,\n    selectedCategoryId,\n    selectedSubCategoryId,\n  } = getState().admin;\n\n  newItemFormData['categoryId'] = selectedCategoryId;\n  newItemFormData['subCategoryId'] = selectedSubCategoryId;\n  newItemFormData['itemImage'] = imageUrls;\n\n  const {\n    categoryId,\n    subCategoryId,\n    itemImage,\n    itemName,\n    itemPrice,\n    buyLink,\n  } = newItemFormData;\n\n  if (!categoryId ||\n      !subCategoryId ||\n      !itemImage.length > 0 ||\n      !itemName ||\n      !itemPrice ||\n      !buyLink) {\n    dispatch(layoutActions.setAlert(true, 'danger', 'All fields are required!'));\n    dispatch(setSubmitting(false));\n\n    return setTimeout(() => {\n      return dispatch(layoutActions.setAlert(false, 'danger', 'All fields are required!'));\n    }, 4000);\n  }\n\n  try {\n    const response = await addNewItem(newItemFormData);\n\n    if (!response.success) {\n      dispatch(layoutActions.setAlert(true, 'danger', 'Something went wrong!'));\n\n      return setTimeout(() => {\n        return dispatch(layoutActions.setAlert(false, 'danger', 'Something went wrong!'));\n      }, 4000);\n    }\n\n    dispatch(selectCategoryInternal(''));\n    dispatch(selectSubCategory(''));\n    dispatch(setImageFormData({}));\n    dispatch(setImageUrls(''))\n    dispatch(setSubmitting(false));\n    dispatch(layoutActions.setAlert(true, 'success', 'Item added successfully!'));\n\n    setTimeout(() => {\n      dispatch(layoutActions.setAlert(false, 'success', 'Item added successfully!'));\n    }, 4000);\n  } catch (err) {\n    console.error(err);\n    dispatch(setSubmitting(false));\n  }\n}\n\nconst editItem = item => async (dispatch, getState) => {\n  dispatch(loadEditItemModal(true));\n  dispatch(setEditingItem(item));\n  dispatch(layoutActions.showEditItemModal(true));\n\n  try {\n    const categories = await getCategories();\n    const subCategories = await getSubCategories();\n\n    dispatch(setAllCategories(categories));\n    dispatch(setAllSubCategories(subCategories));\n  } catch (err) {\n    console.error(err);\n  }\n\n  let newItemFormData = {};\n\n  const {\n    categoryId,\n    subCategoryId,\n    itemName,\n    itemPrice,\n    itemDescription,\n    offer,\n    isFeatured,\n    buyLink,\n    itemImage,\n  } = item;\n\n  newItemFormData['itemName'] = itemName;\n  newItemFormData['itemPrice'] = itemPrice;\n  newItemFormData['itemDescription'] = itemDescription;\n  newItemFormData['offer'] = offer;\n  newItemFormData['isFeatured'] = isFeatured;\n  newItemFormData['buyLink'] = buyLink;\n\n  dispatch(selectCategory(categoryId));\n  dispatch(selectSubCategory(subCategoryId));\n  dispatch(setImageUrls(itemImage))\n\n  dispatch(loadEditItemModal(false));\n}\n\nconst submitEditNewItem = () => async (dispatch, getState) => {\n  const {\n    editingItem,\n    newItemFormData,\n    selectedCategoryId,\n    selectedSubCategoryId,\n    imageUrl,\n  } = getState().admin;\n\n  const { id, itemImage } = editingItem;\n\n  newItemFormData['categoryId'] = selectedCategoryId;\n  newItemFormData['subCategoryId'] = selectedSubCategoryId;\n  newItemFormData['itemImage'] = imageUrl || itemImage;\n\n  try {\n    const response = await postEditItem(id, newItemFormData);\n\n    window.location.reload();\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nconst discardImage = index => (dispatch, getState) => {\n  const { imageUrls } = getState().addNewItem;\n\n  const clonedUrls = cloneDeep(imageUrls);\n  clonedUrls.splice(index, 1);\n\n  dispatch(setImageFormData({}));\n  dispatch(setImageUrls(clonedUrls));\n}\n\nexport const ACTIONS = {\n  selectSubCategory,\n  changeItemImage,\n  uploadItemImage,\n  submitNewItem,\n  editItem,\n  submitEditNewItem,\n  discardImage,\n  setItemName,\n  setItemPrice,\n  setItemDiscount,\n  setItemBestOffer,\n  setItemRating,\n  setNumberOfRating,\n  setItemWarrenty,\n  setReturnPolicy,\n  setReplacementPolicy,\n  setCOD,\n  setItemDesc,\n  setAvailableColors,\n};\n\nfunction AdminReducer(state = defaultState, action) {\n  switch (action.type) {\n    case SET_ALL_CATEGORIES:\n      return Object.assign({}, state, {\n        allCategories: action.arr,\n        filteredCategories: action.arr,\n      });\n    case SET_ALL_SUB_CATEGORIES:\n      return Object.assign({}, state, {\n        allSubCategories: action.arr,\n      });\n    case SET_SUB_CATEGORIES_FOR_CATEGORY:\n      return Object.assign({}, state, {\n        subcategoriesForCategory: action.arr,\n      });\n    case SELECT_CATEGORY:\n      return Object.assign({}, state, {\n        selectedCategoryId: action.catId,\n      });\n    case SELECT_SUB_CATEGORY:\n      return Object.assign({}, state, {\n        selectedSubCategoryId: action.subCatId,\n      });\n    case SET_NEW_ITEM_FORM_DATA:\n      return Object.assign({}, state, {\n        newItemFormData: action.formData,\n      });\n    case SET_IMAGE_FORM_DATA:\n      return Object.assign({}, state, {\n        imageFormData: action.imageFormData,\n      });\n    case SET_IMAGE_URLS:\n      return Object.assign({}, state, {\n        imageUrls: action.imageUrls,\n      });\n    case SET_UPLOADING_IMAGE:\n      return Object.assign({}, state, {\n        uploadingImage: action.bool,\n      });\n    case SET_LOADING_EDIT_ITEM_MODAL:\n      return Object.assign({}, state, {\n        loadingEditItemModal: action.bool,\n      });\n    case SET_EDITING_ITEM:\n      return Object.assign({}, state, {\n        editingItem: action.item,\n      });\n    case SET_SUBMITTING_FLAG:\n      return Object.assign({}, state, {\n        submitttingFlag: action.bool,\n      });\n    case SET_ITEM_NAME:\n      return Object.assign({}, state, {\n        itemName: action.name,\n      });\n    case SET_ITEM_PRICE:\n      return Object.assign({}, state, {\n        itemPrice: action.price,\n      });\n    case SET_ITEM_DISCOUNT:\n      return Object.assign({}, state, {\n        discount: action.discount,\n      });\n    case SET_ITEM_BEST_OFFER:\n      return Object.assign({}, state, {\n        bestOffer: action.bestOffer,\n      });\n    case SET_ITEM_RATING:\n      return Object.assign({}, state, {\n        rating: action.rating,\n      });\n    case SET_NUMBER_OF_RATING:\n      return Object.assign({}, state, {\n        numberOfRating: action.number,\n      });\n    case SET_ITEM_WARRENTY:\n      return Object.assign({}, state, {\n        warrenty: action.warrenty,\n      });\n    case SET_RETURN_POLICY:\n      return Object.assign({}, state, {\n        returnPolicy: action.policy,\n      });\n    case SET_REPLACEMENT_POLICY:\n      return Object.assign({}, state, {\n        replacement: action.policy,\n      });\n    case SET_COD:\n      return Object.assign({}, state, {\n        COD: action.bool,\n      });\n    case SET_ITEM_DESC:\n      return Object.assign({}, state, {\n        itemDescription: action.desc,\n      });\n    case SET_AVAILABLE_COLORS:\n      return Object.assign({}, state, {\n        avaliableColors: action.colors,\n      });\n    default:\n      return state;\n  }\n}\n\nexport default AdminReducer;","/home/ravi/Coding/AffMark/client/src/components/confirmDeleteItemPrompt/index.js",[],"/home/ravi/Coding/AffMark/client/src/components/confirmDeleteItemPrompt/ConfirmDeleteItemPrompt.js",[],"/home/ravi/Coding/AffMark/client/src/reducers/AddNewCategoryReducer.js",[],{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","replacedBy":"283"},{"ruleId":"280","replacedBy":"284"},{"ruleId":"282","replacedBy":"285"},{"ruleId":"286","severity":1,"message":"287","line":19,"column":7,"nodeType":"288","messageId":"289","endLine":19,"endColumn":18},{"ruleId":"286","severity":1,"message":"290","line":21,"column":7,"nodeType":"288","messageId":"289","endLine":21,"endColumn":24},{"ruleId":"286","severity":1,"message":"291","line":25,"column":7,"nodeType":"288","messageId":"289","endLine":25,"endColumn":24},{"ruleId":"286","severity":1,"message":"292","line":33,"column":7,"nodeType":"288","messageId":"289","endLine":33,"endColumn":28},{"ruleId":"286","severity":1,"message":"293","line":34,"column":7,"nodeType":"288","messageId":"289","endLine":34,"endColumn":22},{"ruleId":"286","severity":1,"message":"294","line":35,"column":7,"nodeType":"288","messageId":"289","endLine":35,"endColumn":22},{"ruleId":"286","severity":1,"message":"295","line":36,"column":7,"nodeType":"288","messageId":"289","endLine":36,"endColumn":22},{"ruleId":"286","severity":1,"message":"296","line":37,"column":7,"nodeType":"288","messageId":"289","endLine":37,"endColumn":20},{"ruleId":"286","severity":1,"message":"297","line":38,"column":7,"nodeType":"288","messageId":"289","endLine":38,"endColumn":15},{"ruleId":"286","severity":1,"message":"298","line":39,"column":7,"nodeType":"288","messageId":"289","endLine":39,"endColumn":21},{"ruleId":"286","severity":1,"message":"299","line":43,"column":7,"nodeType":"288","messageId":"289","endLine":43,"endColumn":25},{"ruleId":"286","severity":1,"message":"300","line":46,"column":7,"nodeType":"288","messageId":"289","endLine":46,"endColumn":19},{"ruleId":"286","severity":1,"message":"301","line":13,"column":3,"nodeType":"288","messageId":"289","endLine":13,"endColumn":13},{"ruleId":"286","severity":1,"message":"302","line":408,"column":11,"nodeType":"288","messageId":"289","endLine":408,"endColumn":19},{"ruleId":"286","severity":1,"message":"302","line":426,"column":11,"nodeType":"288","messageId":"289","endLine":426,"endColumn":19},{"ruleId":"286","severity":1,"message":"303","line":2,"column":22,"nodeType":"288","messageId":"289","endLine":2,"endColumn":32},{"ruleId":"286","severity":1,"message":"304","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":18},{"ruleId":"286","severity":1,"message":"305","line":3,"column":8,"nodeType":"288","messageId":"289","endLine":3,"endColumn":16},{"ruleId":"286","severity":1,"message":"306","line":5,"column":8,"nodeType":"288","messageId":"289","endLine":5,"endColumn":26},{"ruleId":"286","severity":1,"message":"307","line":6,"column":8,"nodeType":"288","messageId":"289","endLine":6,"endColumn":17},{"ruleId":"286","severity":1,"message":"308","line":7,"column":8,"nodeType":"288","messageId":"289","endLine":7,"endColumn":25},{"ruleId":"286","severity":1,"message":"309","line":8,"column":8,"nodeType":"288","messageId":"289","endLine":8,"endColumn":22},{"ruleId":"286","severity":1,"message":"310","line":9,"column":8,"nodeType":"288","messageId":"289","endLine":9,"endColumn":24},{"ruleId":"286","severity":1,"message":"311","line":15,"column":7,"nodeType":"288","messageId":"289","endLine":15,"endColumn":21},{"ruleId":"286","severity":1,"message":"294","line":27,"column":7,"nodeType":"288","messageId":"289","endLine":27,"endColumn":22},{"ruleId":"286","severity":1,"message":"295","line":28,"column":7,"nodeType":"288","messageId":"289","endLine":28,"endColumn":22},{"ruleId":"286","severity":1,"message":"312","line":30,"column":7,"nodeType":"288","messageId":"289","endLine":30,"endColumn":16},{"ruleId":"286","severity":1,"message":"305","line":1,"column":8,"nodeType":"288","messageId":"289","endLine":1,"endColumn":16},{"ruleId":"286","severity":1,"message":"313","line":5,"column":8,"nodeType":"288","messageId":"289","endLine":5,"endColumn":25},{"ruleId":"314","severity":1,"message":"315","line":90,"column":21,"nodeType":"316","endLine":90,"endColumn":43},{"ruleId":"286","severity":1,"message":"317","line":35,"column":41,"nodeType":"288","messageId":"289","endLine":35,"endColumn":51},{"ruleId":"286","severity":1,"message":"318","line":6,"column":8,"nodeType":"288","messageId":"289","endLine":6,"endColumn":16},{"ruleId":"286","severity":1,"message":"319","line":7,"column":8,"nodeType":"288","messageId":"289","endLine":7,"endColumn":24},{"ruleId":"286","severity":1,"message":"320","line":16,"column":8,"nodeType":"288","messageId":"289","endLine":16,"endColumn":18},{"ruleId":"286","severity":1,"message":"321","line":62,"column":7,"nodeType":"288","messageId":"289","endLine":62,"endColumn":16},{"ruleId":"286","severity":1,"message":"322","line":63,"column":7,"nodeType":"288","messageId":"289","endLine":63,"endColumn":15},{"ruleId":"286","severity":1,"message":"323","line":64,"column":7,"nodeType":"288","messageId":"289","endLine":64,"endColumn":16},{"ruleId":"286","severity":1,"message":"324","line":65,"column":7,"nodeType":"288","messageId":"289","endLine":65,"endColumn":21},{"ruleId":"286","severity":1,"message":"325","line":66,"column":7,"nodeType":"288","messageId":"289","endLine":66,"endColumn":21},{"ruleId":"286","severity":1,"message":"326","line":67,"column":7,"nodeType":"288","messageId":"289","endLine":67,"endColumn":15},{"ruleId":"286","severity":1,"message":"327","line":68,"column":7,"nodeType":"288","messageId":"289","endLine":68,"endColumn":19},{"ruleId":"286","severity":1,"message":"328","line":69,"column":7,"nodeType":"288","messageId":"289","endLine":69,"endColumn":18},{"ruleId":"286","severity":1,"message":"329","line":71,"column":7,"nodeType":"288","messageId":"289","endLine":71,"endColumn":22},{"ruleId":"286","severity":1,"message":"330","line":72,"column":7,"nodeType":"288","messageId":"289","endLine":72,"endColumn":10},{"ruleId":"286","severity":1,"message":"331","line":74,"column":7,"nodeType":"288","messageId":"289","endLine":74,"endColumn":19},{"ruleId":"286","severity":1,"message":"332","line":75,"column":7,"nodeType":"288","messageId":"289","endLine":75,"endColumn":22},{"ruleId":"286","severity":1,"message":"333","line":76,"column":7,"nodeType":"288","messageId":"289","endLine":76,"endColumn":23},{"ruleId":"286","severity":1,"message":"334","line":77,"column":7,"nodeType":"288","messageId":"289","endLine":77,"endColumn":20},{"ruleId":"286","severity":1,"message":"335","line":78,"column":7,"nodeType":"288","messageId":"289","endLine":78,"endColumn":24},{"ruleId":"286","severity":1,"message":"336","line":79,"column":7,"nodeType":"288","messageId":"289","endLine":79,"endColumn":22},{"ruleId":"286","severity":1,"message":"337","line":80,"column":7,"nodeType":"288","messageId":"289","endLine":80,"endColumn":22},{"ruleId":"286","severity":1,"message":"338","line":81,"column":7,"nodeType":"288","messageId":"289","endLine":81,"endColumn":27},{"ruleId":"286","severity":1,"message":"339","line":82,"column":7,"nodeType":"288","messageId":"289","endLine":82,"endColumn":13},{"ruleId":"286","severity":1,"message":"340","line":84,"column":7,"nodeType":"288","messageId":"289","endLine":84,"endColumn":25},{"ruleId":"286","severity":1,"message":"302","line":238,"column":11,"nodeType":"288","messageId":"289","endLine":238,"endColumn":19},"no-native-reassign",["341"],"no-negated-in-lhs",["342"],["341"],["342"],"no-unused-vars","'newCategory' is assigned a value but never used.","Identifier","unusedVar","'changeNewCategory' is assigned a value but never used.","'submitNewCategory' is assigned a value but never used.","'changeNewItemFormData' is assigned a value but never used.","'newItemFormData' is assigned a value but never used.","'changeItemImage' is assigned a value but never used.","'uploadItemImage' is assigned a value but never used.","'submitNewItem' is assigned a value but never used.","'imageUrl' is assigned a value but never used.","'uploadingImage' is assigned a value but never used.","'filteredCategories' is assigned a value but never used.","'discardImage' is assigned a value but never used.","'fileUpload' is assigned a value but never used.","'response' is assigned a value but never used.","'makeStyles' is defined but never used.","'BackupIcon' is defined but never used.","'DoneIcon' is defined but never used.","'HourglassEmptyIcon' is defined but never used.","'TimerIcon' is defined but never used.","'TimerOutlinedIcon' is defined but never used.","'SelectDropdown' is defined but never used.","'HighlightOffIcon' is defined but never used.","'AddNewItemForm' is defined but never used.","'imageUrls' is assigned a value but never used.","'DeleteForeverIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'selectItem' is assigned a value but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'RateSlider' is defined but never used.","'itemPrice' is assigned a value but never used.","'discount' is assigned a value but never used.","'bestOffer' is assigned a value but never used.","'customerRating' is assigned a value but never used.","'numberOfRating' is assigned a value but never used.","'warrenty' is assigned a value but never used.","'returnPolicy' is assigned a value but never used.","'replacement' is assigned a value but never used.","'avaliableColors' is assigned a value but never used.","'COD' is assigned a value but never used.","'setItemPrice' is assigned a value but never used.","'setItemDiscount' is assigned a value but never used.","'setItemBestOffer' is assigned a value but never used.","'setItemRating' is assigned a value but never used.","'setNumberOfRating' is assigned a value but never used.","'setItemWarrenty' is assigned a value but never used.","'setReturnPolicy' is assigned a value but never used.","'setReplacementPolicy' is assigned a value but never used.","'setCOD' is assigned a value but never used.","'setAvailableColors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]